#!/usr/bin/python

# convert dmcs testcase to mcs-ie testcase (i.e, create master hex file)

import sys
import os.path

def debug(msg):
  print >>sys.stderr, "DBG: %s" % (msg,)

def die(msg):
  print >>sys.stderr, "DIE: %s" % (msg,)
  sys.exit(-1)

prefix=sys.argv[1]
debug("'" + prefix + "'")

prefixParts = prefix.split('-')
contextNum = prefixParts[len(prefixParts)-5]
contextNum = int(contextNum)
debug("number of contexts = %d" % (contextNum,))

outFile = "%s_master.hex" % (prefix,)
debug("outFile = %s" % (outFile,))

if os.path.exists(outFile):
  die("output File %s already exists!" % (outFile,))

masterFile = open(outFile,"w+")
print >>masterFile, "%% master file generated by generate_master_file.py for prefix %s\n" % (prefix,)

for ctx in range(1, contextNum+1):
  brFile = "%s-%d.br" % (prefix, ctx)
  lpFile = "%s-%d.lp" % (prefix, ctx)
  debug("br/lp = %s/%s" % (brFile,lpFile))

  contextLine = "#context(%d, \"dlv_asp_context_acc\", \"%s\")." % (ctx,lpFile)
  debug("writing contextLine '%s'" % (contextLine,))
  print >>masterFile, contextLine

  brf = open(brFile,"r")
  bridx = 1
  for line in brf:
    line = line.strip()
    br = line.split(" :- ")
    rewrittenBr = "c%dr%d: (%d:%s) :- %s" % (ctx, bridx, ctx, br[0], br[1])
    debug("rewrote '%s' to '%s'" % (line, rewrittenBr))
    print >>masterFile, rewrittenBr
    bridx += 1

masterFile.close()
debug("finished!")
